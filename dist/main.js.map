{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/page/page-edit/page-edit.component.css","webpack:///./src/app/components/page/page-edit/page-edit.component.html","webpack:///./src/app/components/page/page-edit/page-edit.component.ts","webpack:///./src/app/components/page/page-list/page-list.component.css","webpack:///./src/app/components/page/page-list/page-list.component.html","webpack:///./src/app/components/page/page-list/page-list.component.ts","webpack:///./src/app/components/page/page-new/page-new.component.css","webpack:///./src/app/components/page/page-new/page-new.component.html","webpack:///./src/app/components/page/page-new/page-new.component.ts","webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/profile/profile.component.css","webpack:///./src/app/components/user/profile/profile.component.html","webpack:///./src/app/components/user/profile/profile.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/components/user/user-list/user-list.component.css","webpack:///./src/app/components/user/user-list/user-list.component.html","webpack:///./src/app/components/user/user-list/user-list.component.ts","webpack:///./src/app/components/website/website-edit/website-edit.component.css","webpack:///./src/app/components/website/website-edit/website-edit.component.html","webpack:///./src/app/components/website/website-edit/website-edit.component.ts","webpack:///./src/app/components/website/website-list/website-list.component.css","webpack:///./src/app/components/website/website-list/website-list.component.html","webpack:///./src/app/components/website/website-list/website-list.component.ts","webpack:///./src/app/components/website/website-new/website-new.component.css","webpack:///./src/app/components/website/website-new/website-new.component.html","webpack:///./src/app/components/website/website-new/website-new.component.ts","webpack:///./src/app/components/widget/widget-chooser/widget-chooser.component.css","webpack:///./src/app/components/widget/widget-chooser/widget-chooser.component.html","webpack:///./src/app/components/widget/widget-chooser/widget-chooser.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-edit.component.css","webpack:///./src/app/components/widget/widget-edit/widget-edit.component.html","webpack:///./src/app/components/widget/widget-edit/widget-edit.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-heading/widget-heading.component.css","webpack:///./src/app/components/widget/widget-edit/widget-heading/widget-heading.component.html","webpack:///./src/app/components/widget/widget-edit/widget-heading/widget-heading.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-image/widget-image.component.css","webpack:///./src/app/components/widget/widget-edit/widget-image/widget-image.component.html","webpack:///./src/app/components/widget/widget-edit/widget-image/widget-image.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-youtube/widget-youtube.component.css","webpack:///./src/app/components/widget/widget-edit/widget-youtube/widget-youtube.component.html","webpack:///./src/app/components/widget/widget-edit/widget-youtube/widget-youtube.component.ts","webpack:///./src/app/components/widget/widget-list/widget-list.component.css","webpack:///./src/app/components/widget/widget-list/widget-list.component.html","webpack:///./src/app/components/widget/widget-list/widget-list.component.ts","webpack:///./src/app/services/admin-guard.service.clients.ts","webpack:///./src/app/services/auth-guard.service.clients.ts","webpack:///./src/app/services/page.service.client.ts","webpack:///./src/app/services/shared.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/website.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet> </router-outlet>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'web-maker';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {Routing} from \"./app.routing\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { ProfileComponent } from './components/user/profile/profile.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { WebsiteListComponent } from './components/website/website-list/website-list.component';\r\nimport { WebsiteNewComponent } from './components/website/website-new/website-new.component';\r\nimport { WebsiteEditComponent } from './components/website/website-edit/website-edit.component';\r\nimport { PageListComponent } from './components/page/page-list/page-list.component';\r\nimport { PageNewComponent } from './components/page/page-new/page-new.component';\r\nimport { PageEditComponent } from './components/page/page-edit/page-edit.component';\r\nimport { WidgetListComponent } from './components/widget/widget-list/widget-list.component';\r\nimport { WidgetChooserComponent } from './components/widget/widget-chooser/widget-chooser.component';\r\nimport { WidgetEditComponent } from './components/widget/widget-edit/widget-edit.component';\r\nimport { WidgetHeadingComponent } from './components/widget/widget-edit/widget-heading/widget-heading.component';\r\nimport { WidgetImageComponent } from './components/widget/widget-edit/widget-image/widget-image.component';\r\nimport { WidgetYoutubeComponent } from './components/widget/widget-edit/widget-youtube/widget-youtube.component';\r\nimport { UserService } from \"./services/user.service.client\";\r\nimport { WebsiteService } from './services/website.service.client';\r\nimport { PageService } from \"./services/page.service.client\";\r\nimport { WidgetService } from './services/widget.service.client';\r\nimport { SharedService } from './services/shared.service.client';\r\nimport { AuthGuard } from \"./services/auth-guard.service.clients\";\r\nimport { UserListComponent } from './components/user/user-list/user-list.component';\r\nimport { AdminGuard } from './services/admin-guard.service.clients';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RegisterComponent,\r\n    WebsiteListComponent,\r\n    WebsiteNewComponent,\r\n    WebsiteEditComponent,\r\n    PageListComponent,\r\n    PageNewComponent,\r\n    PageEditComponent,\r\n    WidgetListComponent,\r\n    WidgetChooserComponent,\r\n    WidgetEditComponent,\r\n    WidgetHeadingComponent,\r\n    WidgetImageComponent,\r\n    WidgetYoutubeComponent,\r\n    UserListComponent\r\n  ],\r\n  imports: [BrowserModule, Routing, FormsModule,HttpModule],\r\n  providers: [UserService, WebsiteService, PageService, WidgetService, SharedService, AuthGuard, AdminGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Routes, RouterModule} from \"@angular/router\";\r\nimport {ModuleWithProviders} from \"@angular/core\";\r\nimport {LoginComponent} from \"./components/user/login/login.component\";\r\nimport {RegisterComponent} from \"./components/user/register/register.component\";\r\nimport { WebsiteListComponent} from \"./components/website/website-list/website-list.component\";\r\nimport {ProfileComponent} from \"./components/user/profile/profile.component\";\r\nimport { WebsiteNewComponent } from \"./components/website/website-new/website-new.component\";\r\nimport{ WebsiteEditComponent} from \"./components/website/website-edit/website-edit.component\";\r\nimport { PageListComponent } from \"./components/page/page-list/page-list.component\";\r\nimport { PageNewComponent } from \"./components/page/page-new/page-new.component\";\r\nimport { PageEditComponent } from \"./components/page/page-edit/page-edit.component\";\r\nimport {WidgetListComponent} from \"./components/widget/widget-list/widget-list.component\";\r\nimport {WidgetChooserComponent} from \"./components/widget/widget-chooser/widget-chooser.component\";\r\nimport {WidgetEditComponent} from \"./components/widget/widget-edit/widget-edit.component\";\r\nimport { AuthGuard } from \"./services/auth-guard.service.clients\";\r\nimport { UserListComponent } from \"./components/user/user-list/user-list.component\";\r\nimport { AdminGuard } from \"./services/admin-guard.service.clients\";\r\n// Import all other components here\r\n\r\n\r\nconst APP_ROUTES : Routes = [\r\n  { path : '', component : LoginComponent},\r\n { path : 'login' , component: LoginComponent},\r\n { path : 'register' , component:RegisterComponent },\r\n { path : 'profile' , component: ProfileComponent, canActivate: [AuthGuard]},\r\n { path : 'user/:uid/website' , component: WebsiteListComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/new\", component:WebsiteNewComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid\", component:WebsiteEditComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid/page\", component:PageListComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid/page/new\", component:PageNewComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid/page/:pid\", component:PageEditComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid/page/:pid/widget\", component:WidgetListComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid/page/:pid/widget/new\", component:WidgetChooserComponent, canActivate: [AuthGuard]},\r\n {path: \"user/:uid/website/:wid/page/:pid/widget/:wgid\", component:WidgetEditComponent, canActivate: [AuthGuard]},\r\n { path: \"user-list\", component: UserListComponent, canActivate: [AdminGuard]} \r\n // so on\r\n];\r\n\r\n\r\n// Export the routes as module providers\r\n\r\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS9wYWdlLWVkaXQvcGFnZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \" <!--Navigation Bar-->\\r\\n <nav class=\\\"navbar navbar-light fixed-top bg-light\\\">\\r\\n  <a class=\\\"color-red\\\" routerLink =\\\"/user/{{uid}}/website/{{wid}}/page\\\">\\r\\n    <i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n  <a class=\\\"navbar-brand\\\" routerLink =\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}} padding-left\\\">Edit page</a>\\r\\n  <button form = \\\"myForm\\\" class=\\\"color-red btn bg-transparent\\\" type = \\\"submit\\\" [disabled] = \\\"myForm.invalid\\\"> <i class=\\\"fas fa-check\\\"></i></button>\\r\\n\\r\\n  </nav>\\r\\n  <!--New page form-->\\r\\n  <div class=\\\"container\\\">\\r\\n      <form id= \\\"myForm\\\" #myForm = \\\"ngForm\\\" (ngSubmit) = \\\"update()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for =\\\"name\\\"><b>Name</b> </label>\\r\\n              <input class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder =\\\"Name of the blog post\\\" required name = \\\"name\\\" [(ngModel)] = \\\"page.name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"title\\\"><b>Title</b> </label>\\r\\n                  <input class=\\\"form-control\\\" id=\\\"Title\\\" type=\\\"text\\\" placeholder=\\\"Title of the new page\\\" name = \\\"title\\\" [(ngModel)] = \\\"page.title\\\">\\r\\n          </div>                    \\r\\n          <a routerLink =\\\"/user/{{uid}}/website/{{wid}}/page\\\"class=\\\"btn btn-lg btn-warning\\\">Cancel</a>\\r\\n          <button type = \\\"button\\\" (click) = \\\"delete()\\\" class=\\\"btn btn-lg btn-danger float-right\\\">Delete</button>\\r\\n      </form>\\r\\n  </div>\\r\\n<!--Bottom page-->\\r\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n  <div class=\\\"full-width\\\" >\\r\\n      <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n  </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PageService } from 'src/app/services/page.service.client';\r\nimport { Page } from 'src/app/models/page.model.client';\r\n\r\n@Component({\r\n  selector: 'app-page-edit',\r\n  templateUrl: './page-edit.component.html',\r\n  styleUrls: ['./page-edit.component.css']\r\n})\r\nexport class PageEditComponent implements OnInit {\r\nuid: string;\r\nwid: string;\r\npid : string;\r\npage: Page = {\r\n   name: \"\",\r\n   title: \"\",\r\n   websiteId: \"\"\r\n};\r\n  constructor(private activatedRoute: ActivatedRoute, private pageService: PageService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe (\r\n      params =>{\r\n        this.wid = params[\"wid\"];\r\n        this.uid = params[\"uid\"];\r\n        this.pid = params[\"pid\"];\r\n          this.pageService.findPageById(this.pid).subscribe(\r\n            (page: Page) => {\r\n              this.page = page;\r\n            });\r\n      });\r\n  }\r\n  update (){\r\n    this.pageService.updatePage(this.page).subscribe(\r\n      (page: Page) => {\r\n        this.router.navigate([\"user\", this.uid,\"website\", this.uid,\"page\"]);\r\n      });\r\n  }\r\n  delete () {\r\n    this.pageService.deletePage(this.pid).subscribe(\r\n      (page: Page) =>{\r\n        this.router.navigate([\"user\", this.uid,\"website\", this.uid,\"page\"]);\r\n        });\r\n    \r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS9wYWdlLWxpc3QvcGFnZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \" <!--Navigation Bar-->\\r\\n <nav class=\\\"navbar navbar-light fixed-top bg-light\\\">\\r\\n  <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\">Pages</a>\\r\\n  <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/new\\\"> <i class=\\\"fas fa-plus\\\"></i></a>\\r\\n  </nav>\\r\\n<!--Lists-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n<ul class=\\\"list-group\\\">\\r\\n<li class=\\\"list-group-item\\\" *ngFor=\\\"let page of pages\\\">\\r\\n<a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{page._id}}/widget\\\">{{page.name}}</a>\\r\\n<a class=\\\"float-right \\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{page._id}}\\\"><i class=\\\"fas fa-cog\\\"></i></a>\\r\\n</li>\\r\\n</ul>\\r\\n</div>\\r\\n<!--Footer-->\\r\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n<div class=\\\"full-width\\\" >\\r\\n  <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"> <i class=\\\"fas fa-user\\\"></i></a>\\r\\n</div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport {PageService} from \"src/app/services/page.service.client\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Page } from 'src/app/models/page.model.client';\r\n\r\n@Component({\r\n  selector: 'app-page-list',\r\n  templateUrl: './page-list.component.html',\r\n  styleUrls: ['./page-list.component.css']\r\n})\r\nexport class PageListComponent implements OnInit {\r\n\r\n  constructor(private pageService: PageService, private activatedRoute: ActivatedRoute){ }\r\n  wid: string;\r\n  pages: Page[];\r\n  uid: string;\r\n\r\n  ngOnInit() {\r\n\r\n  this.activatedRoute.params.subscribe(params =>{\r\n    this.wid= params['wid'];\r\n    this.uid = params['uid'];\r\n    this.pageService.findPagesByWebsiteId(this.wid).subscribe(\r\n      ( pages: Page[]) =>{\r\n              this.pages = pages;\r\n      });\r\n  });\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS9wYWdlLW5ldy9wYWdlLW5ldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"   <!--Navigation Bar-->\\r\\n   <nav class=\\\"navbar navbar-light fixed-top bg-light\\\">\\r\\n    <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page \\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n    <a class=\\\"navbar-brand padding-left\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/:pid\\\">New Page</a>\\r\\n    <button  [disabled] = \\\"myForm.invalid\\\" class=\\\"color-red btn bg-transparent\\\" form = \\\"myForm\\\" type = \\\"submit\\\"> <i class=\\\"fas fa-check\\\"></i></button>\\r\\n    </nav>\\r\\n    <!--New page form-->\\r\\n    <div class=\\\"container\\\">\\r\\n        <form id =\\\"myForm\\\" #myForm=\\\"ngForm\\\" (ngSubmit) = \\\"createPage()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for =\\\"name\\\"><b>Name</b> </label>\\r\\n                <input required name= \\\"name\\\" [(ngModel)] = \\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Name of the new page\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"title\\\"><b>Title</b> </label>\\r\\n                    <input name = \\\"title\\\" [(ngModel)] = \\\"title\\\" class=\\\"form-control\\\" id=\\\"Title\\\" type=\\\"text\\\" placeholder=\\\"Title of the new page\\\">\\r\\n            </div>               \\r\\n             <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"class=\\\"btn btn-lg btn-warning\\\">Cancel</a>\\r\\n            <button type = \\\"submit\\\" [disabled] = \\\"myForm.invalid\\\" class=\\\"btn btn-lg btn-success float-right\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n<!--Bottom page-->\\r\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n    <div class=\\\"full-width\\\" >\\r\\n        <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n    </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PageService } from 'src/app/services/page.service.client';\r\nimport { Page } from 'src/app/models/page.model.client';\r\n@Component({\r\n  selector: 'app-page-new',\r\n  templateUrl: './page-new.component.html',\r\n  styleUrls: ['./page-new.component.css']\r\n})\r\nexport class PageNewComponent implements OnInit {\r\n  wid:string;\r\n  uid: string;\r\n  name: string;\r\n  title: string;\r\n  constructor(private activatedRoute:ActivatedRoute,\r\n     private pageService: PageService,\r\n     private router: Router\r\n     ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe (params => {\r\n        this.wid = params['wid'];\r\n        this.uid = params['uid'];\r\n      });\r\n  }\r\n  createPage (){\r\n    const page: Page = {\r\n      name: this.name,\r\n      title: this.title,\r\n      websiteId: this.wid\r\n    };\r\n    this.pageService.createPage(page).subscribe(\r\n      (page: Page) =>{\r\n        this.router.navigate ([\"user\",this.uid,\"website\",this.wid,\"page\"])\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" >\\r\\n  <h1> Login</h1>\\r\\n  <form  (ngSubmit) = \\\"logIn()\\\" #myForm= \\\"ngForm\\\">  <!-- #myForm is angular way to create and ID-->\\r\\n   <div *ngIf =\\\"errorFlag\\\" class = \\\"alert alert-danger\\\"> Our records indicate that the username and password do not match. Please, try again. \\r\\n      please try again! </div>\\r\\n      <div class=\\\"form-group\\\"> \\r\\n        <input class=\\\"form-control\\\" required name = \\\"username\\\" [(ngModel)]= \\\"username\\\" type=\\\"text\\\" placeholder=\\\"username\\\" #userInput = \\\"ngModel\\\">\\r\\n      </div>\\r\\n      <div *ngIf =\\\"userInput.invalid && userInput.touched\\\" class =\\\"alert alert-warning\\\"> Username Field can not be empty! </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <input class=\\\"form-control\\\" required name = \\\"password\\\" [(ngModel)]= \\\"password\\\" type= \\\"password\\\" placeholder=\\\"password\\\" #passwordInput = \\\"ngModel\\\">\\r\\n  </div> \\r\\n  <div *ngIf =\\\"passwordInput.invalid && passwordInput.touched\\\" class =\\\"alert alert-warning\\\"> Password Field can not be empty! </div>\\r\\n  <button [disabled] = \\\"myForm.invalid\\\" type = \\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Login</button>\\r\\n\\r\\n  <a routerLink=\\\"/register\\\" class=\\\"btn btn-success btn-block\\\">Register</a>\\r\\n  </form>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../../../services/user.service.client\";\r\nimport { User } from \"../../../models/user.model.client\"; \r\nimport { Router } from \"@angular/router\";\r\nimport { SharedService} from \"../../../services/shared.service.client\"\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username : string;\r\n  password : string;\r\n  errorFlag : boolean;\r\n  \r\n  constructor( private userService: UserService, private router : Router,\r\n    private sharedService: SharedService) { }\r\n\r\n  ngOnInit() {}\r\n  logIn () {\r\n    // How subscribe works on angular\r\n  this.userService.login(\r\n   this.username, this.password).subscribe (\r\n     (data: any) => {\r\n      this.sharedService.user = data;\r\n      this.router.navigate(['/profile'])},\r\n      // Otherwise\r\n      (error: any) => {\r\n        this.errorFlag = true;\r\n          });          \r\n      }        \r\n   }\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \" <!--Navbar -->\\r\\n <nav class=\\\"navbar navbar-dark bg-primary fixed-top\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/user/{{uid}}\\\"><b>Profile</b></a>\\r\\n  <button [disabled] = \\\"myForm.invalid\\\" class=\\\"btn bg-transparent color-white\\\" type =\\\"submit\\\" form = \\\"myForm\\\"><i class=\\\"fas fa-check\\\"></i></button> \\r\\n</nav>\\r\\n<!--form-->\\r\\n<div class=\\\"container\\\">\\r\\n<form #myForm = \\\"ngForm\\\" (ngSubmit)= \\\"update()\\\" id = \\\"myForm\\\">\\r\\n    <div *ngIf = \\\"userError\\\" class = \\\"alert.alert-danger\\\"> This username is already taken. Try another username</div>\\r\\n    <div *ngIf = \\\"successFlag\\\" class = \\\"alert.alert-success\\\"> Update successfully</div>\\r\\n   <!--Username-->\\r\\n    <div class=\\\"form-group\\\"> \\r\\n        <label><b>Username</b></label>\\r\\n        <input #userInput= \\\"ngModel\\\" required class=\\\"form-control\\\" [(ngModel)] = \\\"user.username\\\"  name = \\\"username\\\" placeholder =\\\" Enter Username....\\\">\\r\\n    </div>\\r\\n    <div *ngIf = \\\"userInput.invalid\\\" class = \\\"alert.alert-warning\\\"> Username can't be empty</div>\\r\\n     <!--Email Address-->\\r\\n     <div class =\\\"form-group\\\">\\r\\n           <label for = \\\"email\\\"><b>Email Address</b></label>\\r\\n           <input class=\\\"form-control\\\" name=\\\"email\\\"  [(ngModel)] = \\\"user.email\\\" placeholder =\\\" Enter Email Address...\\\">\\r\\n           <small id =\\\"emailHelp\\\" class = \\\"form-text text-muted\\\"> We'll never share your \\r\\n               email with anyone else. </small>\\r\\n      </div>\\r\\n     <!--First Name-->\\r\\n    <div class =\\\"form-group\\\">\\r\\n          <label for=\\\"firstName\\\"><b>First Name</b></label>\\r\\n          <input  class=\\\"form-control\\\" name =\\\"firstName\\\"  [(ngModel)] = \\\"user.firstName\\\" placeholder=\\\"First Name....\\\">\\r\\n    </div>\\r\\n     <!--Last Name-->\\r\\n     <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"lastName\\\"><b>Last Name</b></label>\\r\\n        <input  class=\\\"form-control\\\"  name =\\\"lastName\\\" [(ngModel)]= \\\"user.lastName\\\" placeholder=\\\" Enter Last Name...\\\">\\r\\n     </div>\\r\\n     <!--Adding 2 Buttons-->\\r\\n     <a routerLink=\\\"/user/{{uid}}/website\\\"class=\\\"btn btn-primary btn-block\\\">\\r\\n        websites</a>\\r\\n      <button type=\\\"button\\\" (click)= \\\"logout()\\\" class=\\\"btn btn-danger btn-block\\\">Logout </button>\\r\\n      <br/>\\r\\n      <a *ngIf=\\\"user.admin\\\" class= \\\"btn btn-outline-dark\\\"\\r\\n       routerLink= \\\"/user-list\\\"> User List </a>\\r\\n    </form>\\r\\n    <div>\\r\\n<!--Footer-->\\r\\n<nav class=\\\"navbar navbar-dark bg-primary fixed-bottom\\\">\\r\\n <div class=\\\"full-width\\\" >\\r\\n     <a class=\\\"color-white float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport {UserService } from \"../../../services/user.service.client\"; // import UserService from Services\r\nimport { User } from 'src/app/models/user.model.client';\r\nimport {SharedService} from \"../../../services/shared.service.client\";\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(private sharedService: SharedService, private userService: UserService, private router: Router ) { }\r\n    uid : string;\r\n    user:User = {\r\n        username:\"\",\r\n        password:\"\",\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email:\"\"\r\n        };\r\n    oldUsername: string;\r\n    userError: boolean;\r\n    successFlag: boolean;\r\n    users: User[];\r\n\r\n  ngOnInit() {\r\n      this.user = this.sharedService.user;\r\n      this.uid = this.user._id;\r\n      this.oldUsername = this.user.username;\r\n      }\r\n      // implement an event handler bound to the logout \r\n      // button in the profile view and then send back user to login page\r\n      logout() {\r\n        this.userService.logout().subscribe((data: any) => {\r\n          this.router.navigate([\"login\"]);\r\n        });\r\n      }\r\n     \r\n    update (){\r\n            if(this.user.username === this.oldUsername) {\r\n\r\n         this.userService.updateUser(this.user).subscribe\r\n         (\r\n (user:User) => {\r\n  this.userError = false;\r\n  this.successFlag = true;\r\n});\r\n }\r\n else {\r\n  this.userService.findUserByUsername (this.user.username).subscribe(\r\n  (data: any) =>{\r\n    if (!data) {\r\n    this.userService.updateUser (this.user).subscribe(\r\n      (user: User) => {\r\n        this.userError = false;\r\n        this.successFlag = true; \r\n         });\r\n        }\r\n         else {\r\n          this.userError = true;\r\n          this.successFlag = false;\r\n        } \r\n      });\r\n     }\r\n  }\r\n}\r\n\r\n    \r\n    ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" >\\r\\n  <h1> Register</h1>\\r\\n  <form (ngSubmit)= \\\"register()\\\" #myForm = \\\"ngForm\\\">\\r\\n      <div *ngIf = \\\"userError\\\"class = \\\"alert alert-danger\\\"> Username is already taken, please try another Username</div>\\r\\n      <div *ngIf = \\\"pwdError\\\" class = \\\"alert alert-danger\\\"> Passwords are not match! Please, try again</div>\\r\\n      <div class=\\\"form-group\\\"> \\r\\n            <input [(ngModel)] = \\\"username\\\" required name = \\\"username\\\"  class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"username\\\" #userInput = \\\"ngModel\\\">\\r\\n      </div>  \\r\\n    <div *ngIf = \\\"userInput.invalid && userInput.touched\\\" class =\\\"alert alert-warning\\\"> Username can not be empty    </div>\\r\\n  <div class =\\\"form-group\\\">\\r\\n  <input [(ngModel)] = \\\"password\\\"  required name = \\\"password\\\" class =\\\"form-control\\\" type = \\\"password\\\" placeholder=\\\"password please...\\\" #pwdInput = \\\"ngModel\\\">\\r\\n</div> \\r\\n<div *ngIf = \\\"pwdInput.invalid && pwdInput.touched\\\" class =\\\"alert alert-warning\\\"> Password can not be empty </div>\\r\\n  <div class = \\\"form-group\\\"> \\r\\n      <input [(ngModel)] = \\\"verifyPassword\\\" required name = \\\"verifyPassword\\\" class=\\\"form-control\\\" type = \\\"password\\\" placeholder=\\\"verify password please...\\\" #verifypwdInput = \\\"ngModel\\\">\\r\\n  </div>\\r\\n  <div *ngIf = \\\"verifypwdInput .invalid && verifypwdInput .touched\\\" class =\\\"alert alert-warning\\\"> Please, verify your password again </div>\\r\\n      <button type =\\\"submit\\\" [disabled]= \\\"myForm.invalid\\\" class=\\\"btn btn-primary btn-block\\\">Register</button>\\r\\n      <a routerLink=\\\"/login\\\" class=\\\"btn btn-danger btn-block\\\">cancel</a>\\r\\n  </form>\\r\\n</div>        \"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"src/app/services/user.service.client\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from 'src/app/models/user.model.client';\r\nimport { SharedService } from 'src/app/services/shared.service.client';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    username : string;\r\n    password : string;\r\n    verifyPassword : string;\r\n    pwdError : boolean;\r\n    userError : boolean;\r\n\r\n  constructor (private userService: UserService, private router : Router, private sharedService: SharedService) { }\r\n\r\n  ngOnInit() {}\r\n  register() {\r\n    if (this.password !== this.verifyPassword) {\r\n      this.pwdError = true;\r\n      this.userError = false;\r\n    } else {\r\n      this.pwdError = false;\r\n      this.userService\r\n        .findUserByUsername(this.username)\r\n        .subscribe((data: any) => {\r\n          if (!data) {\r\n            const newUser: User = {\r\n              username: this.username,\r\n              password: this.password,\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\"\r\n            };\r\n            this.userService.register(newUser).subscribe(\r\n              (data: User) => {\r\n                this.sharedService.user = data;\r\n                this.router.navigate(['profile']);\r\n              },\r\n              (error: any) => {\r\n                this.userError = true;\r\n              }\r\n           );\r\n          } else {\r\n            this.userError = true;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  user-list works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS93ZWJzaXRlLWVkaXQvd2Vic2l0ZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--Navbar-->\\r\\n<nav class=\\\"navbar navbar-dark bg-primary fixed-top row nav-height\\\">\\r\\n  <!-- Left Navigation Panel-->\\r\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\r\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n  <a class=\\\"color-white padding-left\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}\\\">\\r\\n    <h5 class=\\\"display-inline\\\">Websites</h5></a>\\r\\n      <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}/website/new\\\"> <i class=\\\"fas fa-plus\\\"></i></a>\\r\\n  </div>\\r\\n      <!--Right Navigation Panel-->\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n        <a class=\\\"color-white d-sm-none\\\" routerLink=\\\"/user/{{uid}}/website\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n      <a class=\\\"color-white  padding-left\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}\\\"><h5 class=\\\"display-inline\\\">Edit Website</h5></a>\\r\\n            <button class=\\\"color-white float-right btn bg-transparent\\\" form = \\\"myForm\\\"><i class=\\\"fas fa-check\\\"> </i> </button> \\r\\n  </div>\\r\\n  </nav>\\r\\n  <!--List & Form-->\\r\\n  <div class=\\\"row\\\">\\r\\n  <!-- left panel list-->\\r\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\r\\n  <div class=\\\"container-fluid\\\">   \\r\\n  <ul class=\\\"list-group\\\">\\r\\n  <li class=\\\"list-group-item\\\" *ngFor = \\\"let website of websites\\\"> \\r\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"> {{website.name}}</a> \\r\\n  <a class=\\\"float-right\\\"routerLink=\\\"/user/{{uid}}/website/{{website._id}}\\\"><i class=\\\"fas fa-cog\\\"></i></a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n </div>\\r\\n  <!-- rigt panel form-->\\r\\n <div class = \\\"col-sm-8\\\">\\r\\n     <div class = \\\"conatainer-fluid\\\">\\r\\n      <form id =\\\"myForm\\\" #myForm = \\\"ngForm\\\"  (ngSubmit) = \\\"update()\\\">\\r\\n            <div class = \\\"form-group\\\">\\r\\n                <label for=\\\"name\\\"> <b> Name</b> </label>\\r\\n     <input id = \\\"name\\\" class = \\\"form-control\\\" type=\\\"text\\\" placeholder = \\\"Name of website...\\\"\\r\\n     [(ngModel)] = \\\"website.name\\\" name = \\\"name\\\">\\r\\n</div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"description\\\"> <b>Description</b></label>   \\r\\n      <textarea [(ngModel)]= \\\"website.description\\\" name = \\\"description\\\" id=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Description of your website\\\"></textarea>\\r\\n  </div> \\r\\n  <a routerLink=\\\"/user/{{uid}}/website\\\"class=\\\"btn btn-lg btn-warning\\\">Cancel</a>\\r\\n  <button type = \\\"button\\\" (click) = \\\"delete()\\\" class=\\\"btn btn-lg btn-danger float-right\\\">Delete</button>\\r\\n  </form>\\r\\n    </div>\\r\\n      </div>\\r\\n  <!--Footer-->\\r\\n  <nav class=\\\"navbar navbar-dark bg-primary fixed-bottom\\\">\\r\\n        <div class=\\\"full-width\\\" >\\r\\n            <a class=\\\"color-white float-right\\\"routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n        </div>\\r\\n    </nav>         \"","import { Component, OnInit } from '@angular/core';\r\nimport {WebsiteService} from \"src/app/services/website.service.client\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Website } from 'src/app/models/website.model.client';\r\n\r\n@Component({\r\n  selector: 'app-website-edit',\r\n  templateUrl: './website-edit.component.html',\r\n  styleUrls: ['./website-edit.component.css']\r\n})\r\nexport class WebsiteEditComponent implements OnInit {\r\n  websites : Website[];\r\n     \r\n  uid: string;\r\n  wid: string;\r\n  nem : string;\r\n  description: string;\r\n  website: Website = {\r\n    name: \"\",\r\n    description: \"\",  \r\n    developerId:\"\"\r\n\r\n  };\r\n  constructor(\r\n    private websiteService: WebsiteService,\r\n    private activatedRoute:  ActivatedRoute,\r\n    private router: Router,\r\n    )  {}\r\n    \r\n    ngOnInit() {\r\n      this.activatedRoute.params.subscribe(\r\n        (params)=> {\r\n          this.uid = params ['uid'];\r\n          this.wid = params ['wid'];\r\n this.websiteService.findWebsitesByUser(this.uid).subscribe(\r\n            (websites: Website[]) => {\r\n              this.websites = websites;\r\n          });\r\n this.websiteService.findWebsiteById(this.wid).subscribe(\r\n   (website: Website) =>{\r\n     this.website = website;\r\n   });\r\n        });\r\n      }\r\n      update () {\r\n        const newWeb: Website = {\r\n          name: this.website.name,\r\n          description: this.website.description,\r\n           _id: this.wid,\r\n           developerId: this.uid\r\n        };\r\n        this.websiteService.updateWebsite(newWeb).subscribe(\r\n          (website: Website) =>{\r\n            this.router.navigate([\"user\",this.uid,\"website\"]);\r\n          });\r\n        }\r\n        delete(){\r\n          this.websiteService.deleteWebsite(this.wid).subscribe(\r\n            (website: Website) => {\r\n              this.router.navigate([\"user\",this.uid,\"website\"]);\r\n          });\r\n       }\r\n    }\r\n    \r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS93ZWJzaXRlLWxpc3Qvd2Vic2l0ZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"  <!--Navbar-->\\r\\n  <nav class=\\\"navbar fixed-top navbar-dark bg-primary\\\">\\r\\n    <a class=\\\"color-white\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n    <div class=\\\"left-width\\\">\\r\\n    <a class=\\\"navbar-brand float-left\\\" routerLink=\\\"/user/{{uid}}/website\\\"><b>Websites</b></a>\\r\\n    </div>\\r\\n    <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/new\\\"> <i class=\\\"fas fa-plus\\\"></i></a>\\r\\n        </nav>\\r\\n        <!--website List-->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n             <li class=\\\"list-group-item\\\" *ngFor = \\\"let website of websites\\\"> <a routerLink=\\\"/user/{{uid}}/website/{{website._id}}/page\\\"> {{website.name}}</a> \\r\\n                <a class=\\\"float-right\\\"routerLink=\\\"/user/{{uid}}/website/{{website._id}}\\\"><i class=\\\"fas fa-cog\\\"></i></a>\\r\\n                 </li>\\r\\n        </ul>\\r\\n        </div>\\r\\n        <!--footer-->\\r\\n        <nav class=\\\"navbar navbar-dark bg-primary fixed-bottom\\\">\\r\\n           <div class=\\\"full-width\\\" >\\r\\n               <a class=\\\"color-white float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n           </div>\\r\\n         </nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport {WebsiteService} from \"src/app/services/website.service.client\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Website } from 'src/app/models/website.model.client';\r\n@Component({\r\n  selector: 'app-website-list',\r\n  templateUrl: './website-list.component.html',\r\n  styleUrls: ['./website-list.component.css']\r\n})\r\nexport class WebsiteListComponent implements OnInit {\r\nwebsites : Website[];\r\nuid: string;\r\n  constructor(\r\n    private websiteService: WebsiteService,\r\n    private activatedRoute:  ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n        this.activatedRoute.params.subscribe(\r\n          (params)=> {\r\n            this.uid = params ['uid'];\r\n            this.websiteService.findWebsitesByUser(this.uid).subscribe(\r\n              (websites: Website[]) => {\r\n                this.websites = websites;\r\n              }\r\n            )\r\n          });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS93ZWJzaXRlLW5ldy93ZWJzaXRlLW5ldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--Navbar-->\\r\\n<nav class=\\\"navbar navbar-dark bg-primary fixed-top row navbar-height\\\">\\r\\n  <!-- Left Navigation Panel-->\\r\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\r\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n      <a class=\\\"color-white padding-left\\\" routerLink=\\\"/user/{{uid}}/website/new\\\"><h5 class=\\\"display-inline\\\">Websites</h5></a>\\r\\n              <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}/website/new\\\"> <i class=\\\"fas fa-plus\\\"></i></a>\\r\\n  </div>\\r\\n              <!--Right Navigation Panel-->\\r\\n      <div class=\\\"col-sm-8\\\" >\\r\\n              <a class=\\\"color-white d-sm-none\\\" routerLink=\\\"/user/{{uid}}/website\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n     <a class=\\\"color-white  padding-left\\\" routerLink=\\\"/user/{{uid}}/website/new\\\"><h5 class=\\\"display-inline\\\">New Website</h5></a>\\r\\n    <button  type = \\\"submit\\\" [disabled] = \\\"myForm.invalid\\\" form =\\\"myForm\\\" class=\\\"color-white float-right btn bg-transparent\\\" routerLink=\\\"/user/{{uid}}/website/new\\\"><i class=\\\"fas fa-check\\\"></i></button> \\r\\n          </div>\\r\\n  </nav>\\r\\n          <!--List & Form-->\\r\\n          <div class=\\\"row\\\">\\r\\n              <!-- left panel list-->\\r\\n  \\r\\n          <div class=\\\"col-4 d-none d-sm-block\\\">\\r\\n  <div class=\\\"container-fluid\\\">   \\r\\n          <ul class=\\\"list-group\\\">\\r\\n                      <li class=\\\"list-group-item\\\" *ngFor = \\\"let website of websites\\\"> \\r\\n                          <a routerLink=\\\"/user/{{uid}}/website/{{website._id}}/page\\\"> {{website.name}}</a> \\r\\n                          <a class=\\\"float-right\\\" routerLink=\\\"/user/{{uid}}/website/{{website._id}}\\\"><i class=\\\"fas fa-cog\\\"></i></a>\\r\\n                              </li> \\r\\n                         </ul>\\r\\n                  </div>\\r\\n          </div>\\r\\n          <!-- rigt panel form-->\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n              <div class=\\\"container-fluid\\\">\\r\\n              <form id = \\\"myForm\\\" #myForm = \\\"ngForm\\\"  (ngSubmit)= \\\"createWebsite()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\"><b> Name</b></label>\\r\\n                      <input [(ngModel)] = \\\"name\\\" name = \\\"name\\\" id=\\\"name\\\" required class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Name\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"description\\\"> <b>Description</b></label>\\r\\n                  <textarea [(ngModel)] = \\\"description\\\" name = \\\"description\\\" id=\\\"description\\\" rows=\\\"10\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Description of your website\\\"></textarea>\\r\\n              </div> \\r\\n              <a routerLink=\\\"/user/{{uid}}/website\\\" class=\\\"btn btn-lg btn-warning\\\">Cancel</a>\\r\\n              <button class=\\\"btn btn-lg btn-success float-right\\\">  Submit </button> \\r\\n              </form>\\r\\n          </div>\\r\\n       </div>\\r\\n    </div>\\r\\n  <!--Footer-->\\r\\n  <nav class=\\\"navbar navbar-dark bg-primary fixed-bottom\\\">\\r\\n      <div class=\\\"full-width\\\" >\\r\\n          <a class=\\\"color-white float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n      </div>\\r\\n      </nav>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport {WebsiteService} from \"src/app/services/website.service.client\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Website } from 'src/app/models/website.model.client';\r\n\r\n@Component({\r\n  selector: 'app-website-new',\r\n  templateUrl: './website-new.component.html',\r\n  styleUrls: ['./website-new.component.css']\r\n})\r\nexport class WebsiteNewComponent implements OnInit {\r\n  websites : Website[];\r\n  uid: string;\r\n  name : string;\r\n  description: string;\r\n  constructor(\r\n    private websiteService: WebsiteService,\r\n    private activatedRoute:  ActivatedRoute,\r\n    private router: Router\r\n    )  {}\r\n    ngOnInit() {\r\n      this.activatedRoute.params.subscribe(\r\n        (params)=> {\r\n          this.uid = params ['uid'];\r\n          this.websiteService.findWebsitesByUser(this.uid).subscribe(\r\n            (websites: Website[]) => {\r\n              this.websites = websites;\r\n            });\r\n        });\r\n}\r\n    createWebsite() {\r\n        const website: Website = {\r\n          name: this.name,\r\n          description: this.description,\r\n          developerId: this.uid\r\n        };\r\n        // Send those data to the data.services\r\n        this.websiteService.createWebsite(website).subscribe(\r\n          (website: Website) =>{\r\n        this.router.navigate([\"user\", this.uid, \"website\"]);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1jaG9vc2VyL3dpZGdldC1jaG9vc2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"   <!--Navigation bar-->\\r\\n   <nav class=\\\"navbar navbar-light fixed-top bg-light\\\">\\r\\n    <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n    <a class=\\\"navbar-brand padding-left\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\">Choose Widget</a>\\r\\n    \\r\\n    </nav>\\r\\n    <!--List of item for widget chooser-->\\r\\n    <div class=\\\"container\\\">\\r\\n        <ul class=\\\"list-group-flush\\\">\\r\\n<li class=\\\"list-group-item\\\"> <span  (click) = \\\"create('HEADING')\\\" class ='pointer' >Header</span></li>\\r\\n    <li class=\\\"list-group-item\\\"> <span (click) = \\\"create('LABEL')\\\" class = 'pointer'>Label</span></li>\\r\\n       <li class=\\\"list-group-item\\\"> <span (click) = \\\"create('HTML')\\\" class = 'pointer'>HTML</span></li>\\r\\n        <li class=\\\"list-group-item\\\"> <span (click) = \\\"create('TEXT INPUT')\\\" class = 'pointer'>Text Input</span>\\r\\n         <li class=\\\"list-group-item\\\"> <span (click) = \\\"create('LINK')\\\" class = 'pointer'>Link</span></li>\\r\\n<li class=\\\"list-group-item\\\"><span (click) = \\\"create('BUTTON')\\\" class = 'pointer' >Button</span></li>\\r\\n<li class=\\\"list-group-item\\\"><span (click) = \\\"create('IMAGE')\\\" class = 'pointer'>Image</span></li>\\r\\n<li class=\\\"list-group-item\\\"><span (click) = \\\"create('YOUTUBE')\\\" class = 'pointer'> Youtube</span></li>\\r\\n<li class=\\\"list-group-item\\\"><span (click) = \\\"create('DATA TABLE')\\\" class = 'pointer'>Data Table </span></li>\\r\\n<li class=\\\"list-group-item\\\"><span (click) = \\\"create('REAPETER')\\\" class = 'pointer'>Repeater</span></li>                     \\r\\n        </ul>\\r\\n\\r\\n    </div>\\r\\n <!--Bottom Navigation Bar and Icon -->\\r\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n    <div class=\\\"full-width\\\" >\\r\\n        <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n    </div>\\r\\n</footer>\"","import { Component, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service.client';\r\nimport { Widget} from \"src/app/models/widget.model.client\";\r\n\r\n@Component({\r\n  selector: 'app-widget-chooser',\r\n  templateUrl: './widget-chooser.component.html',\r\n  styleUrls: ['./widget-chooser.component.css']\r\n})\r\nexport class WidgetChooserComponent implements OnInit {\r\nuid: string;\r\npid: string;\r\nwid: string;\r\n  constructor( private activatedRoute: ActivatedRoute,\r\n    private widgetService: WidgetService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(\r\n      params =>{\r\n        this.uid = params[\"uid\"];\r\n        this.pid = params[\"pid\"];\r\n        this.wid = params[\"wid\"];\r\n      });\r\n    }\r\n         create(type: string) {\r\n            const widget: Widget = {\r\n            widgetType: type,  // want to  auto import\r\n            pageId: this.pid\r\n          };\r\n          this.widgetService.createWidget(widget).subscribe(\r\n            (widget: Widget) =>{\r\n              this.router.navigate([\r\n                'user',\r\n              this.uid,\r\n              'website',\r\n              this.wid,\r\n              'page',\r\n              this.pid,\r\n              'widget',\r\n              widget._id\r\n            ]);\r\n            });\r\n    \r\n        }\r\n  }\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n <div [ngSwitch] = \\\"widget.widgetType\\\">\\r\\n\\r\\n  <div *ngSwitchCase = \\\"'HEADING'\\\">\\r\\n    <app-widget-heading> </app-widget-heading>\\r\\n  </div>\\r\\n   <div *ngSwitchCase = \\\"'IMAGE'\\\">\\r\\n      <app-widget-image> </app-widget-image>\\r\\n    </div>\\r\\n    <div *ngSwitchCase = \\\"'YOUTUBE'\\\">\\r\\n        <app-widget-youtube> </app-widget-youtube>\\r\\n      </div> \\r\\n    </div>\\r\\n \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service.client';\r\nimport { Widget } from 'src/app/models/widget.model.client';\r\n@Component({\r\n  selector: 'app-widget-edit',\r\n  templateUrl: './widget-edit.component.html',\r\n  styleUrls: ['./widget-edit.component.css']\r\n})\r\nexport class WidgetEditComponent implements OnInit {\r\nwgid: string;\r\nwidget:Widget ={\r\n  text: \"\",\r\n  widgetType: \"\",\r\n  size: 0,\r\n  pageId: \"\",\r\n  url: \"\",\r\n  width:\"\"\r\n};\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private widgetService: WidgetService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        this.wgid = params[\"wgid\"];\r\n      this.widgetService.findWidgetById(this.wgid).subscribe(\r\n        (widget: Widget) =>{\r\n        this.widget = widget;\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC1oZWFkaW5nL3dpZGdldC1oZWFkaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"   <!--Navigation bar-->\\r\\n   <nav class=\\\"navbar navbar-light fixed-top bg-light\\\">\\r\\n    <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/{{wgid}}\\\"> Edit Widget</a>\\r\\n    <button form= \\\"myForm\\\" class=\\\"float-right color-red btn bg-transparent\\\" ><i class=\\\"fas fa-check\\\"></i></button>  \\r\\n</nav>\\r\\n<!--List on the middle of the  edit widget-->\\r\\n<div class=\\\"container\\\"> \\r\\n    <form id = \\\"myForm\\\" #myForm = \\\"ngForm\\\" (ngSubmit)= \\\"update ()\\\">\\r\\n        <!--Text for the main page-->\\r\\n        <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"text\\\"> <b>Text</b></label>\\r\\n                <input name = \\\"text\\\" [(ngModel)]= \\\"widget.text\\\" type=\\\"text\\\"  palceholder = \\\"Widget Text\\\"  id=\\\"text\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <!--Size for the main page-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"size\\\"> <b>Size</b></label>\\r\\n                    <input name = \\\"size\\\" [(ngModel)]= \\\"widget.size\\\" type=\\\"number\\\" id=\\\"size\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n    \\r\\n            <button type = \\\"button\\\" (click) = \\\"delete()\\\" class=\\\"btn btn-danger btn-block\\\" > Delete</button>\\r\\n    </form>\\r\\n</div>\\r\\n   \\r\\n <!--Bottom Navigation Bar and Icon -->\\r\\n\\r\\n<footer nav class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n    <div class=\\\"full-width\\\" >\\r\\n        <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n    </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service.client';\r\nimport { Widget } from 'src/app/models/widget.model.client';\r\n\r\n@Component({\r\n  selector: 'app-widget-heading',\r\n  templateUrl: './widget-heading.component.html',\r\n  styleUrls: ['./widget-heading.component.css']\r\n})\r\nexport class WidgetHeadingComponent implements OnInit {\r\nuid: string;\r\nwid:string;\r\npid: string;\r\nwgid: string;\r\nwidget :Widget ={\r\n  text: \"\",\r\n  widgetType: \"\",\r\n  pageId: \"\"\r\n};\r\n  constructor(private activatedRoute: ActivatedRoute, private router:Router, private widgetService: WidgetService ) { }\r\n\r\n  ngOnInit() { \r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.uid = params[\"uid\"];\r\n      this.wid = params[\"wid\"];\r\n      this.pid = params[\"pid\"];\r\n      this.wgid = params[\"wgid\"];\r\n       this.widgetService.findWidgetById(this.wgid).subscribe(\r\n         (widget: Widget) => {\r\nthis.widget = widget;\r\n         });\r\n    });\r\n  }\r\n  update () {\r\n    this.widgetService.updateWidget(this.widget).subscribe(\r\n      (widget: Widget) =>{\r\n                    // navigate \r\n        this.router.navigate([\r\n          \"user\",\r\n         this.uid,\r\n        \"website\",\r\n        this.pid,\r\n         \"page\",\r\n          this.pid, \r\n         \"widget\"\r\n        ]);\r\n      });\r\n  }\r\n  delete () {\r\n    this.widgetService.deleteWidget(this.wgid).subscribe(\r\n      ( widgets: Widget[]) => {\r\n        this.router.navigate([\r\n          \"user\",\r\n         this.uid,\r\n        \"website\",\r\n        this.pid,\r\n         \"page\",\r\n          this.pid, \r\n         \"widget\"\r\n        ]);\r\n\r\n      });\r\n   \r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC1pbWFnZS93aWRnZXQtaW1hZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"    <!--Navigation bar-->\\r\\n    <nav class=\\\" navbar navbar-light fixed-top bg-light\\\">\\r\\n      <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/user/:uid/website/{{wid}}page/{{pid}}/widget/{{wgid}}\\\"> Edit Widget</a>\\r\\n      <button class=\\\"float-right color-red btn bg-transparent\\\" type =\\\"submit\\\" form =\\\"myForm\\\" (click)= \\\"update()\\\"><i class=\\\"fas fa-check\\\"></i></button>\\r\\n      \\r\\n  </nav>\\r\\n  <!--List on the middle of  edit widget-->\\r\\n  <div class=\\\"container\\\"> \\r\\n      <form id=\\\"myForm\\\" #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"update()\\\">\\r\\n           <!--URL for the main page-->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"url\\\"> <b>URL</b></label>\\r\\n                      <input name= \\\"url\\\" placeholder=\\\"Image Url\\\"\\r\\n                       [(ngModel)]=\\\"widget.url\\\" name=\\\"url\\\"  type=\\\"text\\\" id=\\\"url\\\" class=\\\"form-control\\\"/>\\r\\n                  </div>\\r\\n                   <!--Width for the main page-->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"width\\\"> <b>Width</b></label>\\r\\n                      <input name =\\\"width\\\" placeholder=\\\"Image Width\\\" [(ngModel)]=\\\"widget.width\\\"  type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\"/>\\r\\n                  </div>\\r\\n      \\r\\n              <button type=\\\"button\\\" (click)=\\\"delete ()\\\" class=\\\"btn btn-danger btn-block\\\"> Delete</button>\\r\\n      </form>\\r\\n  </div>\\r\\n     \\r\\n   <!--Bottom Navigation Bar and Icon -->\\r\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n      <div class=\\\"full-width\\\" >\\r\\n          <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n      </div>\\r\\n    </footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service.client';\r\nimport { Widget } from 'src/app/models/widget.model.client';\r\n\r\n@Component({\r\n  selector: 'app-widget-image',\r\n  templateUrl: './widget-image.component.html',\r\n  styleUrls: ['./widget-image.component.css']\r\n})\r\nexport class WidgetImageComponent implements OnInit {\r\n\r\n  uid: string;\r\n  wid:string;\r\n  pid: string;\r\n  wgid: string;\r\n  widget: Widget ={\r\n    url: \"\",\r\n  widgetType: \"IMAGE\",\r\n  width: \"\",\r\n  pageId: \"\"\r\n  };\r\n\r\n    constructor(private activatedRoute: ActivatedRoute, private router:Router, private widgetService: WidgetService) { }\r\n  \r\n    ngOnInit() { \r\n      this.activatedRoute.params.subscribe(params =>{\r\n        this.uid = params[\"uid\"];\r\n        this.uid = params[\"wid\"];\r\n        this.uid = params[\"pid\"];\r\n        this.uid = params[\"wgid\"];\r\n        this.widgetService.findWidgetById(this.wgid).subscribe(\r\n          (widget: Widget) =>{\r\n            this.widget = widget;\r\n          });\r\n      });\r\n    }\r\n    update () {\r\n      this.widgetService.updateWidget(this.widget).subscribe(\r\n        (widget: Widget) =>{\r\n                      // navigate \r\n          this.router.navigate([\r\n            \"user\",\r\n           this.uid,\r\n          \"website\",\r\n          this.pid,\r\n           \"page\",\r\n            this.pid, \r\n           \"widget\"\r\n          ]);\r\n        });\r\n    }\r\n\r\n   \r\n    delete () {\r\n      this.widgetService.deleteWidget(this.wgid).subscribe(\r\n        ( widgets: Widget[]) => {\r\n          this.router.navigate([\r\n            \"user\",\r\n           this.uid,\r\n          \"website\",\r\n          this.pid,\r\n           \"page\",\r\n            this.pid, \r\n           \"widget\"\r\n          ]);\r\n  \r\n        });\r\n    }\r\n  \r\n  }\r\n  \r\n  ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC15b3V0dWJlL3dpZGdldC15b3V0dWJlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"    <!--Navigation bar-->\\r\\n    <nav class=\\\" navbar navbar-light fixed-top bg-light\\\">\\r\\n            <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n            <a class=\\\"navbar-brand\\\" routerLink=\\\"/user/:uid/website/{{wid}}page/{{pid}}/widget/{{wgid}}\\\"> Edit Widget</a>\\r\\n            <button class=\\\"float-right color-red btn bg-transparent\\\"  form=\\\"myForm\\\" type=\\\"submit\\\"(click)= \\\"update()\\\"><i class=\\\"fas fa-check\\\"></i></button>\\r\\n        </nav>\\r\\n        <!--List on the middle of  edit widget-->\\r\\n        <div class=\\\"container\\\"> \\r\\n <form id=\\\"myForm\\\" #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"update()\\\">\\r\\n                 <!--URL for the main page-->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"url\\\"> <b>URL</b></label>\\r\\n                            <input name=\\\"url\\\" placeholder=\\\"Image Url\\\"\\r\\n                             [(ngModel)]=\\\"widget.url\\\"  type=\\\"text\\\" id=\\\"url\\\" class=\\\"form-control\\\"/>\\r\\n                        </div>\\r\\n                         <!--Width for the main page-->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n             <label for=\\\"width\\\"> <b>Width</b></label>\\r\\n             <input name=\\\"width\\\" placeholder=\\\"Image Width\\\"\\r\\n                         [(ngModel)]=\\\"widget.width\\\"  type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\"/>\\r\\n                        </div>\\r\\n    <button type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-danger btn-block\\\">Delete                    </button>\\r\\n    </form>\\r\\n        </div>\\r\\n         <!--Bottom Navigation Bar and Icon -->\\r\\n      <footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n            <div class=\\\"full-width\\\" >\\r\\n                <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n            </div>\\r\\n        </footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service.client';\r\nimport { Widget } from 'src/app/models/widget.model.client';\r\n\r\n@Component({\r\n  selector: 'app-widget-youtube',\r\n  templateUrl: './widget-youtube.component.html',\r\n  styleUrls: ['./widget-youtube.component.css']\r\n})\r\nexport class WidgetYoutubeComponent implements OnInit {\r\n\r\n\r\n  uid: string;\r\n  wid:string;\r\n  pid: string;\r\n  wgid: string;\r\n  widget: Widget ={\r\n    url: \"\",\r\n  widgetType: \"IMAGE\",\r\n  width: \"\",\r\n  pageId: \"\"\r\n  };\r\n    constructor(private activatedRoute: ActivatedRoute, private router:Router, private widgetService: WidgetService) { }\r\n  \r\n    ngOnInit() { \r\n      this.activatedRoute.params.subscribe(params =>{\r\n        this.uid = params[\"uid\"];\r\n        this.wid = params[\"wid\"];\r\n        this.pid = params[\"pid\"];\r\n        this.wgid = params[\"wgid\"];\r\n        this.widgetService.findWidgetById(this.wgid).subscribe(\r\n          (widget: Widget) =>{\r\n this.widget = widget;\r\n          });\r\n        });\r\n      }\r\n    update () {\r\n      this.widgetService.updateWidget(this.widget).subscribe(\r\n        (widget: Widget) =>{\r\n                      // navigate \r\n          this.router.navigate([\r\n            \"user\",\r\n           this.uid,\r\n          \"website\",\r\n          this.pid,\r\n           \"page\",\r\n            this.pid, \r\n           \"widget\"\r\n          ]);\r\n        });\r\n    }\r\n    delete () {\r\n      this.widgetService.deleteWidget(this.wgid).subscribe(\r\n        ( widgets: Widget[]) => {\r\n          this.router.navigate([\r\n            \"user\",\r\n           this.uid,\r\n          \"website\",\r\n          this.pid,\r\n           \"page\",\r\n            this.pid, \r\n           \"widget\"\r\n          ]);\r\n        });\r\n    }\r\n  }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1saXN0L3dpZGdldC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--Navigation bar-->\\r\\n<nav class=\\\"navbar navbar-light fixed-top bg-light\\\">\\r\\n  <a class=\\\"color-red\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"><i class=\\\"fas fa-chevron-left\\\"></i></a>\\r\\n  <a class=\\\"color-black padding-left\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"><b class=\\\"font-lg\\\">Widgets</b></a>\\r\\n  <a class = \\\"color-red icon-right\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"><i  class=\\\"fas fa-plus\\\"></i></a>\\r\\n</nav>\\r\\n<!--Middle page Main Contents-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <!--Widgets -->\\r\\n  <div *ngFor = \\\"let widget of widgets\\\">\\r\\n    <!--Icons-->\\r\\n    <div class=\\\"absolute-right\\\">\\r\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/{{widget._id}}\\\"> <i class=\\\"fas fa-cog\\\"></i></a>\\r\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"> <i class=\\\"fas fa-bars\\\"></i></a>\\r\\n    </div>\\r\\n    <!--Contents-->\\r\\n    <div [ngSwitch] = \\\"widget.widgetType\\\">\\r\\n      <div *ngSwitchCase = \\\"'HEADING'\\\" >\\r\\n        <div [ngSwitch]= \\\"widget.size\\\">\\r\\n          <div *ngSwitchCase = \\\"1\\\">\\r\\n            <h1> {{widget.text}}</h1>  \\r\\n          </div>\\r\\n          <div *ngSwitchCase = \\\"2\\\">\\r\\n            <h2> {{widget.text}}</h2>\\r\\n          </div>  \\r\\n          <div *ngSwitchCase = \\\"3\\\">\\r\\n            <h3> {{widget.text}}</h3>  \\r\\n          </div>\\r\\n          <div *ngSwitchCase = \\\"4\\\">\\r\\n            <h4> {{widget.text}}</h4>  \\r\\n          </div>\\r\\n          <div *ngSwitchCase = \\\"5\\\">\\r\\n            <h5> {{widget.text}}</h5>  \\r\\n          </div>\\r\\n          <div *ngSwitchCase = \\\"6\\\">\\r\\n            <h6> {{widget.text}}</h6>  \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngSwitchCase = \\\"'IMAGE'\\\" > \\r\\n        <img [src]=\\\"widget.url\\\" [style.width]= \\\"widget.width\\\"/>\\r\\n      </div> \\r\\n      <div *ngSwitchCase=\\\"'YOUTUBE'\\\" > \\r\\n        <div class=\\\"embed-responsive embed-responsive-16by9\\\">       \\r\\n          <iframe [src]=\\\"parseYoutubeSource(widget.url)\\\" [style.width]=\\\"widget.width\\\" allowfullscreen></iframe>\\r\\n        </div>\\r\\n      </div> \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--Bottom Navigation Bar Footer-->\\r\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-light\\\">\\r\\n  <div class=\\\"full-width\\\">\\r\\n    <a class=\\\"color-red float-right\\\" routerLink=\\\"/profile\\\"><i class=\\\"fas fa-user\\\"></i></a> \\r\\n  </div>\\r\\n</footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WidgetService } from 'src/app/services/widget.service.client';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Widget } from 'src/app/models/widget.model.client';\r\n\r\n@Component({\r\n  selector: 'app-widget-list',\r\n  templateUrl: './widget-list.component.html',\r\n  styleUrls: ['./widget-list.component.css']\r\n})\r\nexport class WidgetListComponent implements OnInit {\r\n\r\n  uid: string;\r\n  wid:string;\r\n  pid: string;\r\n  widgets: Widget[];\r\n  constructor( private activatedRoute: ActivatedRoute,\r\n     private widgetService: WidgetService, private sanitizer: DomSanitizer\r\n     ) {}\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe( \r\n      params => {\r\n        this.uid = params[\"uid\"];\r\n        this.pid = params[\"pid\"];\r\n        this.wid = params[\"wid\"];\r\n         this.widgetService.findWidgetsByPageId(this.pid).subscribe(\r\n           (widgets: Widget[]) =>{\r\n            this.widgets = widgets;\r\n           });\r\n        });\r\n      }\r\n      parseYoutubeSource(src) {\r\n        // Making sure of youtube video is secure or embeded\r\n        let embedUrl: string = \"https://www.youtube.com/embed/\";\r\n        const splitUrl: string[] = src.split('/');\r\n        embedUrl += splitUrl[splitUrl.length-1];\r\n        // Telling bwroser that the url source is safe\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(embedUrl);\r\n      }\r\n      }\r\n\r\n\r\n","import { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"./user.service.client\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n constructor(private userService: UserService) {}\r\n\r\n canActivate() {\r\n   return this.userService.adminLoggedIn();\r\n }\r\n}","\r\n// Allows user to log in when true\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"./user.service.client\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n constructor(private userService: UserService) {}\r\n\r\n canActivate() {\r\n   return this.userService.loggedIn();\r\n }\r\n}\r\n\r\n ","import { Injectable } from '@angular/core';\r\nimport { Page } from '../models/page.model.client';\r\nimport { Website } from '../models/website.model.client';\r\nimport {Http, Response} from \"@angular/http\" ;\r\nimport { map } from \"rxjs/operators\"; \r\nimport { environment} from \"../../environments/environment\";\r\n// injecting service into module\r\n\r\n\r\n@Injectable()\r\nexport class PageService {\r\n    constructor (private http: Http){}\r\n    Uurl = environment.Uurl;\r\n  createPage (page) {\r\n           // Send post request to the server\r\n   const url = this.Uurl + \"/api/page\";\r\n   return  this.http.post(url, page).pipe(map(\r\n     (res: Response) =>{\r\n       return res.json();\r\n     })\r\n   );\r\n  }\r\n  findPagesByWebsiteId (websiteId: string ) {\r\n    const url = this.Uurl + `/api/website/${websiteId}/page`;\r\n    return this.http.get(url).pipe(map\r\n      ((res:Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n   }\r\n     findPageById (pageId: string) {\r\n        const url = this.Uurl + \"/api/page/\" + pageId;\r\n        return this.http.get(url).pipe(\r\n            map((res: Response) => {\r\n            return res.json();\r\n        })\r\n      );\r\n     }\r\n\r\n     updatePage (page: Page) {\r\n        const url = this.Uurl+ \"/api/page\";\r\n        return this.http.put(url, page).pipe(map\r\n          ((res:Response) => {\r\n            return res.json();\r\n          })\r\n        );\r\n      }\r\n          deletePage (pageId: string) {\r\n            const url = this.Uurl +\"/api/page/\" + pageId;\r\n            return this.http.delete(url,).pipe(map\r\n              ((res:Response) => {\r\n                return res.json();\r\n              })\r\n            );\r\n            }\r\n          }\r\n     \r\n\r\n\r\n    ","import { Injectable } from '@angular/core';\r\n@Injectable()\r\n\r\nexport class SharedService {\r\n    user: any;\r\n}","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user.model.client';\r\nimport {Http, Response, RequestOptions} from \"@angular/http\" ;\r\nimport { map } from \"rxjs/operators\"; \r\nimport { environment} from \"../../environments/environment\";\r\nimport { SharedService } from \"./shared.service.client\";\r\nimport { Router } from '@angular/router';\r\n\r\n// injecting service into module\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor( private http: Http, private sharedService: SharedService, private router: Router) { }\r\n  Uurl = environment.Uurl;\r\n  options = new RequestOptions();\r\n\r\n  // Implementation Login function\r\n  login(username: string, password: string) {\r\n    // use this to authenticate\r\n    this.options.withCredentials = true;\r\n \r\n    const url = this. Uurl + \"/api/login\";\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n // Enable Cross_Origin features\r\n    return this.http.post(url, user, this.options).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  // Log out Function Implementation\r\n  logout() {\r\n    this.options.withCredentials = true;\r\n    const url = this.Uurl + \"/api/logout\";\r\n    return this.http.post(url, \"\", this.options).pipe(\r\n      map((res: Response) => {\r\n        // Send user feedback log out\r\n        this.sharedService.user = 0;\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n // Funct Register \r\n register(user: User) {\r\n  // this communication will be secured\r\n  this.options.withCredentials = true;\r\n  const url = this.Uurl + \"/api/register\";\r\n  return this.http.post(url, user, this.options).pipe(\r\n    map((res: Response) => {\r\n      return res.json();\r\n    })\r\n  );\r\n}\r\n  // LoggedIn Function implementation\r\n  loggedIn() {\r\n    this.options.withCredentials = true;\r\n    return this.http\r\n      .post(this. Uurl + \"/api/loggedIn\", \"\", this.options)\r\n      .pipe(\r\n        map((res: Response) => {\r\n          const user = res.json();\r\n          // Check if user alredy logged In\r\n          if (user !== 0) {\r\n            this.sharedService.user = user; // setting user so as to share with all components\r\n            return true;\r\n          } else {\r\n            // Otherwise send user to login page to authenticate\r\n            this.router.navigate([\"/login\"]);\r\n            return false;\r\n          }\r\n        })\r\n      );\r\n  }\r\n  // Admin Log in\r\n  adminLoggedIn() {\r\n    this.options.withCredentials = true;\r\n    return this.http\r\n      .post(this. Uurl + \"/api/loggedIn\", \"\", this.options)\r\n      .pipe(\r\n        map((res: Response) => {\r\n          const user = res.json();\r\n          // Check if loggedIn user is admin user\r\n          if (user !== 0 && user.adminLoggedIn) {\r\n            return true;\r\n            \r\n          } else {\r\n            // Otherwise send user to login page to authenticate\r\n            this.router.navigate([\"/profile\"]);\r\n            return false;\r\n          }\r\n        })\r\n      );\r\n  }\r\n \r\n \r\n  createUser(user: User) {\r\n   // Send post request to the server\r\n   const url = this.Uurl + \"/api/user\";\r\n  return  this.http.post(url,user).pipe(map(\r\n    (res: Response) =>{\r\n      return res.json();\r\n    })\r\n  );\r\n    }\r\n\r\n  findUserById(userId: string) {\r\n    const url = this.Uurl + \"/api/user/\" + userId;\r\n    return this.http.get(url).pipe(map\r\n      ((res:Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n     // finding user by username\r\n  findUserByUsername(username: string) { \r\n    const url = this.Uurl + \"/api/user?username=\" + username;\r\n    return this.http.get(url).pipe(map\r\n      ((res:Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n}\r\n  findUserByCredentials(username: string, password: string) { \r\n    const url = this.Uurl + \"/api/user?username=\" + username + \"&passsword=\" + password;\r\n    return this.http.get(url).pipe(map\r\n      ((res:Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n\r\n  }\r\n  updateUser(user: User) { \r\n    const url = this.Uurl + \"/api/user/\";\r\n    return this.http.put(url,user).pipe(map\r\n      ((res:Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n    }\r\n  }","import { Injectable } from '@angular/core';\r\n  import { Website } from '../models/website.model.client';\r\n  import {Http, Response} from \"@angular/http\" ;\r\n  import { map } from \"rxjs/operators\"; \r\n  import { environment} from \"../../environments/environment\";\r\n  // injecting service into module\r\n  \r\n  @Injectable()\r\n  export class WebsiteService {\r\n  constructor (private http: Http){}\r\n  Uurl = environment.Uurl;\r\n  \r\n    createWebsite (website: Website) {\r\n           // Send post request to the server\r\n     const url = this.Uurl + \"/api/website\";\r\n     return  this.http.post(url,website).pipe(map(\r\n       (res: Response) =>{\r\n         return res.json();\r\n       })\r\n     );\r\n    }\r\n    findWebsitesByUser (userId: string){\r\n      const url = this.Uurl + `/api/user/${userId}/website`;\r\n      return this.http.get(url).pipe(map\r\n        ((res:Response) => {\r\n          return res.json();\r\n        })\r\n      );\r\n    }\r\n    findWebsiteById(websiteId: string){\r\n      const url = this.Uurl + \"/api/website/\" + websiteId;\r\n      return this.http.get(url).pipe(\r\n          map((res: Response) => {\r\n          return res.json();\r\n      })\r\n    );\r\n  }\r\n    updateWebsite (website: Website) {\r\n      const uUrl = this.Uurl+ \"/api/website\";\r\n      return this.http.put(uUrl, website).pipe(map\r\n        ((res:Response) => {\r\n          return res.json();\r\n        })\r\n      );\r\n    } \r\n    deleteWebsite (websiteId: string){\r\n      const uUrl = this.Uurl +\"/api/website/\" + websiteId;\r\n      return this.http.delete(uUrl,).pipe(map\r\n        ((res:Response) => {\r\n          return res.json();\r\n        })\r\n      );\r\n      }\r\n    }","import { Injectable } from '@angular/core';\r\nimport { Widget } from '../models/widget.model.client';\r\nimport {Http, Response} from \"@angular/http\" ;\r\nimport { map } from \"rxjs/operators\"; \r\nimport { environment} from \"../../environments/environment\";\r\n// injecting service into module\r\n\r\n@Injectable()\r\nexport class WidgetService {\r\n    constructor (private http: Http){}\r\n  Uurl = environment.Uurl;\r\n\r\n  createWidget (widget: Widget) {\r\n       // Send post request to the server\r\n   const url = this.Uurl + \"/api/widget\";\r\n   return  this.http.post(url, widget).pipe(map(\r\n     (res: Response) => {\r\n       return res.json();\r\n     })\r\n   );\r\n  }\r\n  \r\n  findWidgetsByPageId (pageId: string) { \r\n    const url = this.Uurl + `/api/page/${pageId}/widget`;\r\n    return this.http.get(url).pipe(map\r\n      ((res:Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  findWidgetById (widgetId: string) {\r\n    const url = this.Uurl + \"/api/widget/\" + widgetId;\r\n    return this.http.get(url).pipe(\r\n        map((res: Response) => {\r\n        return res.json();\r\n    })\r\n  );\r\n  } \r\n  updateWidget (widget: Widget) {\r\n    const url = this.Uurl+ \"/api/widget\";\r\n    return this.http.put(url, widget).pipe(map\r\n      ((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  deleteWidget (widgetId: string){\r\n    const url = this.Uurl +\"/api/widget/\" + widgetId;\r\n    return this.http.delete(url).pipe(map\r\n      ((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n    }\r\n  } \r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  Uurl:\"http://localhost:4100\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}